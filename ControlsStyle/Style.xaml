<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:FreeEcho.FEControls;assembly=FEControls"
                    xmlns:System="clr-namespace:System;assembly=mscorlib">

    <!-- マウスオーバーとフォーカスの四角形のブラシ -->
    <SolidColorBrush x:Key="MouseOverAndFocusBrush" Color="#FFFFFF"/>
    <!-- フォーカス時の四角形の透明度 -->
    <System:Double x:Key="FocusedOpacity">0.10</System:Double>
    <!-- マウスオーバー時の四角形の透明度 -->
    <System:Double x:Key="MouseOverOpacity">0.15</System:Double>
    <!-- 押された時の四角形の透明度 -->
    <System:Double x:Key="PressedOpacity">0.2</System:Double>
    <!-- 無効時のコントロールの透明度 -->
    <System:Double x:Key="IsEnabledOpacity">0.7</System:Double>

    <!-- Window -->
    <Style x:Key="CustomWindow" TargetType="Window">
        <Setter Property="Background" Value="#222222"/>
    </Style>
    <!-- Window -->

    <!-- Grid -->
    <Style x:Key="BackgroundGrid" TargetType="Grid">
        <Setter Property="Background" Value="#222222"/>
    </Style>
    <!-- Grid -->

    <!-- Expander -->
    <Style x:Key="{x:Type Expander}" TargetType="Expander">
        <Setter Property="Foreground" Value="#FFFFFF"/>
    </Style>
    <!-- Expander -->

    <!-- ToolTip -->
    <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="Background" Value="#333333"/>
    </Style>
    <!-- ToolTip -->

    <!-- GroupBox -->
    <Style x:Key="{x:Type GroupBox}" TargetType="GroupBox">
        <Setter Property="Foreground" Value="#FFFFFF"/>
    </Style>
    <!-- GroupBox -->

    <!-- Button -->
    <Style x:Key="{x:Type Button}" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="BackgroundGrid" Background="#27AE60">
                        <Rectangle x:Name="MouseOverAndFocusRectangle" Fill="{StaticResource MouseOverAndFocusBrush}" Opacity="0.0"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="MouseOverAndFocusRectangle" Property="Opacity" Value="{StaticResource FocusedOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverAndFocusRectangle" Property="Opacity" Value="{StaticResource MouseOverOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MouseOverAndFocusRectangle" Property="Opacity" Value="{StaticResource PressedOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource IsEnabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Button -->

    <!-- CheckBox -->
    <Style x:Key="{x:Type CheckBox}" TargetType="CheckBox">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Margin="2">
                        <Rectangle x:Name="CheckBorderRectangle" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="2" Width="18" Height="18" Fill="#00FFFFFF" Stroke="#27AE60"/>
                        <Polyline x:Name="CheckMarkPolyline" HorizontalAlignment="Left" VerticalAlignment="Center" Points="4,10 8,15 17,3" Stroke="#FFFFFF" StrokeThickness="2" Opacity="0.0"/>
                        <Rectangle x:Name="MouseOverAndFocusRectangle" HorizontalAlignment="Left" VerticalAlignment="Center" Width="22" Height="22" Fill="{StaticResource MouseOverAndFocusBrush}" Opacity="0.0"/>
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="24,0,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="MouseOverAndFocusRectangle" Property="Opacity" Value="{StaticResource FocusedOpacity}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverAndFocusRectangle" Property="Opacity" Value="{StaticResource MouseOverOpacity}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMarkPolyline" Property="Opacity" Value="1.0"/>
                            <Setter TargetName="CheckBorderRectangle" Property="Fill" Value="#27AE60"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource IsEnabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- CheckBox -->

    <!-- ComboBox用のToggleButton -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid Opacity="0.0">
            <Border CornerRadius="0" Background="#FFFFFF" BorderBrush="#97A0A5" BorderThickness="1" Opacity="0.0"/>
        </Grid>
    </ControlTemplate>
    <!-- ComboBox用のToggleButton -->

    <!-- ComboBox用のTextBox -->
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border Focusable="False" Background="{TemplateBinding Background}"/>
    </ControlTemplate>
    <!-- ComboBox用のTextBox -->

    <!-- ComboBox -->
    <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"   />
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="BackgroundGrid" Background="#444444">
                        <Border BorderBrush="#97A0A5" BorderThickness="1"/>
                        <ContentPresenter Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="Left" Margin="4,4,18,4" IsHitTestVisible="False"/>
                        <Path x:Name="ArrowPath" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,4,0" Data="M 0 0 L 4 4 L 8 0 Z" Fill="#FFFFFF"/>
                        <Rectangle x:Name="MouseOverAndFocusRectangle" Fill="{StaticResource MouseOverAndFocusBrush}" Opacity="0.0"/>
                        <ToggleButton Template="{StaticResource ComboBoxToggleButton}" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder" Background="#444444" BorderBrush="#888888" BorderThickness="1"/>
                                <ScrollViewer Margin="1" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="MouseOverAndFocusRectangle" Property="Opacity" Value="{StaticResource FocusedOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverAndFocusRectangle" Property="Opacity" Value="{StaticResource MouseOverOpacity}" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource IsEnabledOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"  Value="False">
                            <Setter Property="Opacity" Value="{StaticResource IsEnabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ComboBox -->

    <!-- ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid Background="#444444">
                        <ContentPresenter VerticalAlignment="Center" Margin="4"/>
                        <Rectangle x:Name="MouseOverAndFocusRectangle" Fill="{StaticResource MouseOverAndFocusBrush}" Opacity="0.0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="MouseOverAndFocusRectangle" Property="Opacity" Value="{StaticResource FocusedOpacity}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverAndFocusRectangle" Property="Opacity" Value="{StaticResource MouseOverOpacity}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource IsEnabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ComboBoxItem -->

    <!-- Label -->
    <Style x:Key="{x:Type Label}" TargetType="Label">
        <Setter Property="Foreground" Value="#FFFFFF"/>
    </Style>
    <!-- Label -->

    <!-- TextBlock -->
    <Style x:Key="{x:Type TextBlock}" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFFFFF"/>
    </Style>
    <!-- TextBlock -->

    <!-- ListBox -->
    <Style x:Key="{x:Type ListBox}" TargetType="ListBox">
        <Setter Property="Background" Value="#333333"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid Width="Auto" Height="Auto">
                        <Border x:Name="Border" CornerRadius="0,0,0,0"/>
                        <ScrollViewer Focusable="False" IsTabStop="False" HorizontalScrollBarVisibility="Disabled">
                            <StackPanel IsItemsHost="True"/>
                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#222222"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ListBox -->

    <!-- CheckListBox -->
    <Style x:Key="{x:Type local:CheckListBox}" TargetType="local:CheckListBox">
        <Setter Property="Background" Value="#222222"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CheckListBox}">
                    <Grid Width="Auto" Height="Auto">
                        <Border x:Name="Border" CornerRadius="0,0,0,0"/>
                        <ScrollViewer Focusable="False" IsTabStop="False" HorizontalScrollBarVisibility="Disabled">
                            <StackPanel IsItemsHost="True"/>
                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#222222"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- CheckListBox -->

    <!-- ListBoxItem -->
    <Style x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="BackgroundGrid" Background="#555555">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        <Rectangle x:Name="MouseOverAndFocusRectangle" Fill="{StaticResource MouseOverAndFocusBrush}" Opacity="0.0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="BackgroundGrid" Property="Background" Value="#777777"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource IsEnabledOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="MouseOverAndFocusRectangle" Property="Opacity" Value="{StaticResource FocusedOpacity}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverAndFocusRectangle" Property="Opacity" Value="{StaticResource MouseOverOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ListBoxItem -->

    <!-- CheckListBoxItem -->
    <Style x:Key="{x:Type local:CheckListBoxItem}" TargetType="local:CheckListBoxItem">
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="BackgroundBrush" Value="#555555"/>
        <Setter Property="MouseOverAndFocusBrush" Value="{StaticResource MouseOverAndFocusBrush}"/>
        <Setter Property="TextBrush" Value="#FFFFFF"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BackgroundBrush" Value="#777777"/>
                <Setter Property="MouseOverAndFocusBrush" Value="{StaticResource MouseOverAndFocusBrush}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="MouseOverAndFocusOpacity" Value="{StaticResource FocusedOpacity}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="MouseOverAndFocusOpacity" Value="{StaticResource MouseOverOpacity}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource IsEnabledOpacity}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- CheckListBoxItem -->

    <!-- ProgressBar -->
    <Style x:Key="{x:Type ProgressBar}" TargetType="ProgressBar">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="#555555"/>
        <Setter Property="Foreground" Value="#27AE60"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource IsEnabledOpacity}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- ProgressBar -->

    <!-- RadioButton -->
    <Style x:Key="{x:Type RadioButton}" TargetType="RadioButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid Margin="2">
                        <Ellipse x:Name="OutsideCircleEllipse" HorizontalAlignment="Left" VerticalAlignment="Center" Width="18" Height="18" Stroke="#27AE60" StrokeThickness="1"/>
                        <Ellipse x:Name="SelectedCircleEllipse" HorizontalAlignment="Left" VerticalAlignment="Center" Width="12" Height="12" Margin="3,0,0,0" Fill="#27AE60" StrokeThickness="0" Opacity="0.0"/>
                        <Rectangle x:Name="MouseOverAndFocusRectangle" HorizontalAlignment="Left" Width="20" Fill="{StaticResource MouseOverAndFocusBrush}" Opacity="0.0"/>
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="MouseOverAndFocusRectangle" Property="Opacity" Value="{StaticResource FocusedOpacity}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverAndFocusRectangle" Property="Opacity" Value="{StaticResource MouseOverOpacity}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="SelectedCircleEllipse" Property="Opacity" Value="1.0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource IsEnabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- RadioButton -->

    <!-- TabControl -->
    <Style x:Key="{x:Type TabControl}" TargetType="TabControl">
        <Setter Property="Background" Value="#00000000"/>
    </Style>
    <!-- TabControl -->

    <!-- TabItem -->
    <Style x:Key="{x:Type TabItem}" TargetType="TabItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="GridBackground" Background="#444444">
                        <Rectangle x:Name="MouseOverAndFocusRectangle" Fill="{StaticResource MouseOverAndFocusBrush}" Opacity="0.0"/>
                        <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,5,0" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="GridBackground" Property="Background" Value="#666666"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="MouseOverAndFocusRectangle" Property="Opacity" Value="{StaticResource FocusedOpacity}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource IsEnabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- TabItem -->

    <!-- TextBox -->
    <Style x:Key="{x:Type TextBox}" TargetType="TextBox">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Background" Value="#444444"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="BorderBrush" Value="#AAAAAA"/>
    </Style>
    <!-- TextBox -->

    <!-- ToggleSwitch -->
    <Style x:Key="{x:Type local:ToggleSwitch}" TargetType="local:ToggleSwitch">
        <Setter Property="BackgroundBrush" Value="#555555"/>
        <Setter Property="ToggleSwitchBrush" Value="#FFFFFF"/>
        <Setter Property="TextBrush" Value="#FFFFFF"/>
        <Setter Property="MouseOverAndFocusBrush" Value="{StaticResource MouseOverAndFocusBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsOn" Value="True">
                <Setter Property="BackgroundBrush" Value="#51E265"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="MouseOverAndFocusOpacity" Value="{StaticResource FocusedOpacity}"/>
            </Trigger>
            <Trigger Property="IsTheMouseCursorInTheSwitch" Value="True">
                <Setter Property="MouseOverAndFocusOpacity" Value="{StaticResource MouseOverOpacity}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource IsEnabledOpacity}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- ToggleSwitch -->

    <!-- ListBoxItemValidState -->
    <Style x:Key="{x:Type local:ListBoxItemValidState}" TargetType="local:ListBoxItemValidState">
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="BackgroundBrush" Value="#555555"/>
        <Setter Property="TextBrush" Value="#FFFFFF"/>
        <Setter Property="MouseOverAndFocusBrush" Value="{StaticResource MouseOverAndFocusBrush}"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="IsValidState" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="BackgroundBrush" Value="#777777"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False"/>
                    <Condition Property="IsValidState" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BackgroundBrush" Value="#6C8CA8"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="IsValidState" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="BackgroundBrush" Value="#8AA5BD"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource IsEnabledOpacity}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="MouseOverAndFocusOpacity" Value="{StaticResource FocusedOpacity}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="MouseOverAndFocusOpacity" Value="{StaticResource MouseOverOpacity}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- ListBoxItemValidState -->

    <!-- ImageButton -->
    <Style x:Key="{x:Type local:ImageButton}" TargetType="local:ImageButton">
        <Setter Property="BackgroundBrush" Value="#555555"/>
        <Setter Property="TextBrush" Value="#FFFFFF"/>
        <Setter Property="MouseOverAndFocusBrush" Value="{StaticResource MouseOverAndFocusBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="MouseOverAndFocusOpacity" Value="{StaticResource FocusedOpacity}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="MouseOverAndFocusOpacity" Value="{StaticResource MouseOverOpacity}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="MouseOverAndFocusOpacity" Value="{StaticResource PressedOpacity}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource IsEnabledOpacity}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- ImageButton -->

    <!-- ImageTabItem -->
    <Style x:Key="{x:Type local:ImageTabItem}" TargetType="local:ImageTabItem">
        <Setter Property="BackgroundBrush" Value="#444444"/>
        <Setter Property="TextBrush" Value="#FFFFFF"/>
        <Setter Property="MouseOverAndFocusBrush" Value="{StaticResource MouseOverAndFocusBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BackgroundBrush" Value="#666666"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource IsEnabledOpacity}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- ImageTabItem -->

    <!-- NumericUpDown -->
    <Style x:Key="{x:Type local:NumericUpDown}" TargetType="local:NumericUpDown">
        <Setter Property="TextBoxBackgroundBrush" Value="#444444"/>
        <Setter Property="TextBoxForegroundBrush" Value="#FFFFFF"/>
        <Setter Property="TextBoxBorderBrush" Value="#AAAAAA"/>
        <Setter Property="UpDownButtonBackgroundBrush" Value="#555555"/>
        <Setter Property="UpDownButtonBorderBrush" Value="#AAAAAA"/>
        <Setter Property="UpDownButtonArrowBrush" Value="#FFFFFF"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource IsEnabledOpacity}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- NumericUpDown -->

    <!-- RepeatButton ScrollBarLineButton -->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border" Margin="1" CornerRadius="2" BorderThickness="0">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#333333"/>
                                        <GradientStop Color="#333333" Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#666666" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#222222" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" >
                            <Path.Fill>
                                <SolidColorBrush Color="#FFFFFF"/>
                            </Path.Fill>
                        </Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- RepeatButton ScrollBarLineButton -->

    <!-- RepeatButton ScrollBarPageButton -->
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="#333333" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- RepeatButton ScrollBarPageButton -->

    <!-- Thumb -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Thumb -->

    <!-- ScrollBar VerticalScrollBar -->
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" CornerRadius="2" Background="#333333" />
            <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" BorderThickness="0" Background="#555555"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>
    <!-- ScrollBar VerticalScrollBar -->

    <!-- ScrollBar HorizontalScrollBar -->
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" CornerRadius="2" Background="#333333" />
            <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" BorderThickness="0" Background="#555555"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>
    <!-- ScrollBar HorizontalScrollBar -->

    <!-- ScrollBar -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- ScrollBar -->

    <!-- ScrollViewer -->
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Background" Value="#333333" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter  Grid.Column="0" Grid.Row="0"/>
                        <ScrollBar x:Name="PART_VerticalScrollBar" Width="18" IsTabStop="False" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{TemplateBinding VerticalOffset}" Margin="0,-1,-1,-1"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Height="18" IsTabStop="False" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{TemplateBinding HorizontalOffset}" Margin="-1,0,-1,-1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ScrollViewer -->

    <!-- ContextMenu -->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" Background="#333333" BorderThickness="1" BorderBrush="#444444">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="Border" Property="Padding" Value="0,1,0,1" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ContextMenu -->

    <!-- MenuItem -->
    <Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="#333333"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid Margin="1">
                        <Rectangle x:Name="CheckBorderRectangle" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="2" Width="18" Height="18" Fill="#333333" Stroke="#333333" Opacity="0.0"/>
                        <Polyline x:Name="CheckMarkPolyline" HorizontalAlignment="Left" VerticalAlignment="Center" Points="4,10 8,15 17,3" Stroke="#FFFFFF" StrokeThickness="2" Opacity="0.0"/>
                        <Rectangle x:Name="MouseOverAndFocusRectangle" Fill="{StaticResource MouseOverAndFocusBrush}" Opacity="0.0"/>
                        <ContentPresenter ContentSource="Header" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="24,0,10,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="MouseOverAndFocusRectangle" Property="Opacity" Value="{StaticResource FocusedOpacity}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MouseOverAndFocusRectangle" Property="Opacity" Value="{StaticResource MouseOverOpacity}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMarkPolyline" Property="Opacity" Value="1.0"/>
                            <Setter TargetName="CheckBorderRectangle" Property="Opacity" Value="1.0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource IsEnabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- MenuItem -->

</ResourceDictionary>